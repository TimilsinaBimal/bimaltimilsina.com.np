/*
! tailwindcss v3.3.2 | MIT License | https://tailwindcss.com
*/
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@100..900&display=swap');

@font-face {
    font-family: Geist;
    src: url("../fonts/GeistVF.woff2") format('woff2'),
        url("../fonts/GeistVF.woff") format('woff'),
        url("../fonts/GeistVF.ttf") format('truetype');
    font-weight: 100 900;
    font-display: swap;
}


@font-face {
    font-family: "Geist Mono";
    src: url("../fonts/GeistMonoVF.woff2") format('woff2'),
        url("../fonts/GeistMonoVF.woff") format('woff'),
        url("../fonts/GeistMonoVF.ttf") format('truetype');
    font-weight: 100 900;
    font-display: swap;
}


*,
:before,
:after {
    box-sizing: border-box;
    border-width: 0;
    border-style: solid;
    border-color: #e5e5e5
}

:before,
:after {
    --tw-content: ""
}

html,
:host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    -moz-tab-size: 4;
    -o-tab-size: 4;
    tab-size: 4;
    font-family: Inter, Geist, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", Segoe UI Symbol, "Noto Color Emoji" !important;
    font-feature-settings: normal;
    font-variation-settings: normal;
    -webkit-tap-highlight-color: transparent
}

body {
    margin: 0;
    line-height: inherit
}

hr {
    height: 0;
    color: inherit;
    border-top-width: 1px
}

abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted
}

h1,
h2,
h3,
h4,
h5,
h6 {
    font-size: inherit;
    font-weight: inherit
}

a {
    color: inherit;
    text-decoration: inherit
}

b,
strong {
    font-weight: bolder
}

code,
kbd,
samp,
pre {
    font-family: Geist Mono, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace;
    font-feature-settings: normal;
    font-variation-settings: normal;
    font-size: 1em
}

small {
    font-size: 80%
}

sub,
sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline
}

sub {
    bottom: -.25em
}

sup {
    top: -.5em
}

table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse
}

button,
input,
optgroup,
select,
textarea {
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    font-size: 100%;
    font-weight: inherit;
    line-height: inherit;
    letter-spacing: inherit;
    color: inherit;
    margin: 0;
    padding: 0
}

button,
select {
    text-transform: none
}

button,
input:where([type=button]),
input:where([type=reset]),
input:where([type=submit]) {
    -webkit-appearance: button;
    background-color: transparent;
    background-image: none
}

:-moz-focusring {
    outline: auto
}

:-moz-ui-invalid {
    box-shadow: none
}

progress {
    vertical-align: baseline
}

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
    height: auto
}

[type=search] {
    -webkit-appearance: textfield;
    outline-offset: -2px
}

::-webkit-search-decoration {
    -webkit-appearance: none
}

::-webkit-file-upload-button {
    -webkit-appearance: button;
    font: inherit
}

summary {
    display: list-item
}

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
    margin: 0
}

fieldset {
    margin: 0;
    padding: 0
}

legend {
    padding: 0
}

ol,
ul,
menu {
    list-style: none;
    margin: 0;
    padding: 0
}

dialog {
    padding: 0
}

textarea {
    resize: vertical
}

input::-moz-placeholder,
textarea::-moz-placeholder {
    opacity: 1;
    color: #a3a3a3
}

input::placeholder,
textarea::placeholder {
    opacity: 1;
    color: #a3a3a3
}

button,
[role=button] {
    cursor: pointer
}

:disabled {
    cursor: default
}

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
    display: block;
    vertical-align: middle
}

img,
video {
    max-width: 100%;
    height: auto
}

[hidden] {
    display: none
}

*,
:before,
:after {
    --tw-border-spacing-x: 0;
    --tw-border-spacing-y: 0;
    --tw-translate-x: 0;
    --tw-translate-y: 0;
    --tw-rotate: 0;
    --tw-skew-x: 0;
    --tw-skew-y: 0;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    --tw-pan-x: ;
    --tw-pan-y: ;
    --tw-pinch-zoom: ;
    --tw-scroll-snap-strictness: proximity;
    --tw-gradient-from-position: ;
    --tw-gradient-via-position: ;
    --tw-gradient-to-position: ;
    --tw-ordinal: ;
    --tw-slashed-zero: ;
    --tw-numeric-figure: ;
    --tw-numeric-spacing: ;
    --tw-numeric-fraction: ;
    --tw-ring-inset: ;
    --tw-ring-offset-width: 0px;
    --tw-ring-offset-color: #fff;
    --tw-ring-color: rgb(59 130 246 / .5);
    --tw-ring-offset-shadow: 0 0 #0000;
    --tw-ring-shadow: 0 0 #0000;
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    --tw-blur: ;
    --tw-brightness: ;
    --tw-contrast: ;
    --tw-grayscale: ;
    --tw-hue-rotate: ;
    --tw-invert: ;
    --tw-saturate: ;
    --tw-sepia: ;
    --tw-drop-shadow: ;
    --tw-backdrop-blur: ;
    --tw-backdrop-brightness: ;
    --tw-backdrop-contrast: ;
    --tw-backdrop-grayscale: ;
    --tw-backdrop-hue-rotate: ;
    --tw-backdrop-invert: ;
    --tw-backdrop-opacity: ;
    --tw-backdrop-saturate: ;
    --tw-backdrop-sepia: ;
    --tw-contain-size: ;
    --tw-contain-layout: ;
    --tw-contain-paint: ;
    --tw-contain-style:
}

::backdrop {
    --tw-border-spacing-x: 0;
    --tw-border-spacing-y: 0;
    --tw-translate-x: 0;
    --tw-translate-y: 0;
    --tw-rotate: 0;
    --tw-skew-x: 0;
    --tw-skew-y: 0;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    --tw-pan-x: ;
    --tw-pan-y: ;
    --tw-pinch-zoom: ;
    --tw-scroll-snap-strictness: proximity;
    --tw-gradient-from-position: ;
    --tw-gradient-via-position: ;
    --tw-gradient-to-position: ;
    --tw-ordinal: ;
    --tw-slashed-zero: ;
    --tw-numeric-figure: ;
    --tw-numeric-spacing: ;
    --tw-numeric-fraction: ;
    --tw-ring-inset: ;
    --tw-ring-offset-width: 0px;
    --tw-ring-offset-color: #fff;
    --tw-ring-color: rgb(59 130 246 / .5);
    --tw-ring-offset-shadow: 0 0 #0000;
    --tw-ring-shadow: 0 0 #0000;
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    --tw-blur: ;
    --tw-brightness: ;
    --tw-contrast: ;
    --tw-grayscale: ;
    --tw-hue-rotate: ;
    --tw-invert: ;
    --tw-saturate: ;
    --tw-sepia: ;
    --tw-drop-shadow: ;
    --tw-backdrop-blur: ;
    --tw-backdrop-brightness: ;
    --tw-backdrop-contrast: ;
    --tw-backdrop-grayscale: ;
    --tw-backdrop-hue-rotate: ;
    --tw-backdrop-invert: ;
    --tw-backdrop-opacity: ;
    --tw-backdrop-saturate: ;
    --tw-backdrop-sepia: ;
    --tw-contain-size: ;
    --tw-contain-layout: ;
    --tw-contain-paint: ;
    --tw-contain-style:
}

.container {
    width: 100%
}

@media (min-width: 640px) {
    .container {
        max-width: 640px
    }
}

@media (min-width: 768px) {
    .container {
        max-width: 768px
    }
}

@media (min-width: 1024px) {
    .container {
        max-width: 1024px
    }
}

@media (min-width: 1280px) {
    .container {
        max-width: 1280px
    }
}

@media (min-width: 1536px) {
    .container {
        max-width: 1536px
    }
}

.prose {
    color: var(--tw-prose-body);
    max-width: 65ch
}

.prose :where(p):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em
}

.prose :where([class~=lead]):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: var(--tw-prose-lead);
    font-size: 1.25em;
    line-height: 1.6;
    margin-top: 1.2em;
    margin-bottom: 1.2em
}

.prose :where(a):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: var(--tw-prose-links);
    text-decoration: underline;
    font-weight: 500
}

.prose :where(strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: var(--tw-prose-bold);
    font-weight: 600
}

.prose :where(a strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: inherit
}

.prose :where(blockquote strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: inherit
}

.prose :where(thead th strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: inherit
}

.prose :where(ol):not(:where([class~=not-prose], [class~=not-prose] *)) {
    list-style-type: decimal;
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-inline-start: 1.625em
}

.prose :where(ol[type=A]):not(:where([class~=not-prose], [class~=not-prose] *)) {
    list-style-type: upper-alpha
}

.prose :where(ol[type=a]):not(:where([class~=not-prose], [class~=not-prose] *)) {
    list-style-type: lower-alpha
}

.prose :where(ol[type=A s]):not(:where([class~=not-prose], [class~=not-prose] *)) {
    list-style-type: upper-alpha
}

.prose :where(ol[type=a s]):not(:where([class~=not-prose], [class~=not-prose] *)) {
    list-style-type: lower-alpha
}

.prose :where(ol[type=I]):not(:where([class~=not-prose], [class~=not-prose] *)) {
    list-style-type: upper-roman
}

.prose :where(ol[type=i]):not(:where([class~=not-prose], [class~=not-prose] *)) {
    list-style-type: lower-roman
}

.prose :where(ol[type=I s]):not(:where([class~=not-prose], [class~=not-prose] *)) {
    list-style-type: upper-roman
}

.prose :where(ol[type=i s]):not(:where([class~=not-prose], [class~=not-prose] *)) {
    list-style-type: lower-roman
}

.prose :where(ol[type="1"]):not(:where([class~=not-prose], [class~=not-prose] *)) {
    list-style-type: decimal
}

.prose :where(ul):not(:where([class~=not-prose], [class~=not-prose] *)) {
    list-style-type: disc;
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-inline-start: 1.625em
}

.prose :where(ol>li):not(:where([class~=not-prose], [class~=not-prose] *))::marker {
    font-weight: 400;
    color: var(--tw-prose-counters)
}

.prose :where(ul>li):not(:where([class~=not-prose], [class~=not-prose] *))::marker {
    color: var(--tw-prose-bullets)
}

.prose :where(dt):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    margin-top: 1.25em
}

.prose :where(hr):not(:where([class~=not-prose], [class~=not-prose] *)) {
    border-color: var(--tw-prose-hr);
    border-top-width: 1px;
    margin-top: 3em;
    margin-bottom: 3em
}

.prose :where(blockquote):not(:where([class~=not-prose], [class~=not-prose] *)) {
    font-weight: 500;
    font-style: italic;
    color: var(--tw-prose-quotes);
    border-inline-start-width: .25rem;
    border-inline-start-color: var(--tw-prose-quote-borders);
    quotes: "“" "”" "‘" "’";
    margin-top: 1.6em;
    margin-bottom: 1.6em;
    padding-inline-start: 1em
}

.prose :where(blockquote p:first-of-type):not(:where([class~=not-prose], [class~=not-prose] *)):before {
    content: open-quote
}

.prose :where(blockquote p:last-of-type):not(:where([class~=not-prose], [class~=not-prose] *)):after {
    content: close-quote
}

.prose :where(h1):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: var(--tw-prose-headings);
    font-weight: 800;
    font-size: 2.25em;
    margin-top: 0;
    margin-bottom: .8888889em;
    line-height: 1.1111111
}

.prose :where(h1 strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
    font-weight: 900;
    color: inherit
}

.prose :where(h2):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: var(--tw-prose-headings);
    font-weight: 700;
    font-size: 1.5em;
    margin-top: 2em;
    margin-bottom: 1em;
    line-height: 1.3333333
}

.prose :where(h2 strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
    font-weight: 800;
    color: inherit
}

.prose :where(h3):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    font-size: 1.25em;
    margin-top: 1.6em;
    margin-bottom: .6em;
    line-height: 1.6
}

.prose :where(h3 strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
    font-weight: 700;
    color: inherit
}

.prose :where(h4):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    margin-top: 1.5em;
    margin-bottom: .5em;
    line-height: 1.5
}

.prose :where(h4 strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
    font-weight: 700;
    color: inherit
}

.prose :where(img):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 2em;
    margin-bottom: 2em
}

.prose :where(picture):not(:where([class~=not-prose], [class~=not-prose] *)) {
    display: block;
    margin-top: 2em;
    margin-bottom: 2em
}

.prose :where(video):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 2em;
    margin-bottom: 2em
}

.prose :where(kbd):not(:where([class~=not-prose], [class~=not-prose] *)) {
    font-weight: 500;
    color: var(--tw-prose-kbd);
    box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%), 0 3px rgb(var(--tw-prose-kbd-shadows) / 10%);
    font-size: .875em;
    border-radius: .3125rem;
    padding-top: .1875em;
    padding-inline-end: .375em;
    padding-bottom: .1875em;
    padding-inline-start: .375em
}

.prose :where(code):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: var(--tw-prose-code);
    font-weight: 600;
    font-size: .875em
}

.prose :where(code):not(:where([class~=not-prose], [class~=not-prose] *)):before {
    content: "`"
}

.prose :where(code):not(:where([class~=not-prose], [class~=not-prose] *)):after {
    content: "`"
}

.prose :where(a code):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: inherit
}

.prose :where(h1 code):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: inherit
}

.prose :where(h2 code):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: inherit;
    font-size: .875em
}

.prose :where(h3 code):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: inherit;
    font-size: .9em
}

.prose :where(h4 code):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: inherit
}

.prose :where(blockquote code):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: inherit
}

.prose :where(thead th code):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: inherit
}

.prose :where(pre):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: var(--tw-prose-pre-code);
    background-color: var(--tw-prose-pre-bg);
    overflow-x: auto;
    font-weight: 400;
    font-size: .875em;
    line-height: 1.7142857;
    margin-top: 1.7142857em;
    margin-bottom: 1.7142857em;
    border-radius: .375rem;
    padding-top: .8571429em;
    padding-inline-end: 1.1428571em;
    padding-bottom: .8571429em;
    padding-inline-start: 1.1428571em
}

.prose :where(pre code):not(:where([class~=not-prose], [class~=not-prose] *)) {
    background-color: transparent;
    border-width: 0;
    border-radius: 0;
    padding: 0;
    font-weight: inherit;
    color: inherit;
    font-size: inherit;
    line-height: inherit
}

.prose :where(pre code):not(:where([class~=not-prose], [class~=not-prose] *)):before {
    content: none
}

.prose :where(pre code):not(:where([class~=not-prose], [class~=not-prose] *)):after {
    content: none
}

.prose :where(table):not(:where([class~=not-prose], [class~=not-prose] *)) {
    width: 100%;
    table-layout: auto;
    text-align: start;
    margin-top: 2em;
    margin-bottom: 2em;
    font-size: .875em;
    line-height: 1.7142857
}

.prose :where(thead):not(:where([class~=not-prose], [class~=not-prose] *)) {
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-th-borders)
}

.prose :where(thead th):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    vertical-align: bottom;
    padding-inline-end: .5714286em;
    padding-bottom: .5714286em;
    padding-inline-start: .5714286em
}

.prose :where(tbody tr):not(:where([class~=not-prose], [class~=not-prose] *)) {
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-td-borders)
}

.prose :where(tbody tr:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    border-bottom-width: 0
}

.prose :where(tbody td):not(:where([class~=not-prose], [class~=not-prose] *)) {
    vertical-align: baseline
}

.prose :where(tfoot):not(:where([class~=not-prose], [class~=not-prose] *)) {
    border-top-width: 1px;
    border-top-color: var(--tw-prose-th-borders)
}

.prose :where(tfoot td):not(:where([class~=not-prose], [class~=not-prose] *)) {
    vertical-align: top
}

.prose :where(figure>*):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 0;
    margin-bottom: 0
}

.prose :where(figcaption):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: var(--tw-prose-captions);
    font-size: .875em;
    line-height: 1.4285714;
    margin-top: .8571429em
}

.prose {
    --tw-prose-body: #374151;
    --tw-prose-headings: #111827;
    --tw-prose-lead: #4b5563;
    --tw-prose-links: #111827;
    --tw-prose-bold: #111827;
    --tw-prose-counters: #6b7280;
    --tw-prose-bullets: #d1d5db;
    --tw-prose-hr: #e5e7eb;
    --tw-prose-quotes: #111827;
    --tw-prose-quote-borders: #e5e7eb;
    --tw-prose-captions: #6b7280;
    --tw-prose-kbd: #111827;
    --tw-prose-kbd-shadows: 17 24 39;
    --tw-prose-code: #111827;
    --tw-prose-pre-code: #e5e7eb;
    --tw-prose-pre-bg: #1f2937;
    --tw-prose-th-borders: #d1d5db;
    --tw-prose-td-borders: #e5e7eb;
    --tw-prose-invert-body: #d1d5db;
    --tw-prose-invert-headings: #fff;
    --tw-prose-invert-lead: #9ca3af;
    --tw-prose-invert-links: #fff;
    --tw-prose-invert-bold: #fff;
    --tw-prose-invert-counters: #9ca3af;
    --tw-prose-invert-bullets: #4b5563;
    --tw-prose-invert-hr: #374151;
    --tw-prose-invert-quotes: #f3f4f6;
    --tw-prose-invert-quote-borders: #374151;
    --tw-prose-invert-captions: #9ca3af;
    --tw-prose-invert-kbd: #fff;
    --tw-prose-invert-kbd-shadows: 255 255 255;
    --tw-prose-invert-code: #fff;
    --tw-prose-invert-pre-code: #d1d5db;
    --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
    --tw-prose-invert-th-borders: #4b5563;
    --tw-prose-invert-td-borders: #374151;
    font-size: 1rem;
    line-height: 1.75
}

.prose :where(picture>img):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 0;
    margin-bottom: 0
}

.prose :where(li):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: .5em;
    margin-bottom: .5em
}

.prose :where(ol>li):not(:where([class~=not-prose], [class~=not-prose] *)) {
    padding-inline-start: .375em
}

.prose :where(ul>li):not(:where([class~=not-prose], [class~=not-prose] *)) {
    padding-inline-start: .375em
}

.prose :where(.prose>ul>li p):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: .75em;
    margin-bottom: .75em
}

.prose :where(.prose>ul>li>*:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 1.25em
}

.prose :where(.prose>ul>li>*:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-bottom: 1.25em
}

.prose :where(.prose>ol>li>*:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 1.25em
}

.prose :where(.prose>ol>li>*:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-bottom: 1.25em
}

.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: .75em;
    margin-bottom: .75em
}

.prose :where(dl):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em
}

.prose :where(dd):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: .5em;
    padding-inline-start: 1.625em
}

.prose :where(hr+*):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 0
}

.prose :where(h2+*):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 0
}

.prose :where(h3+*):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 0
}

.prose :where(h4+*):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 0
}

.prose :where(thead th:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    padding-inline-start: 0
}

.prose :where(thead th:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    padding-inline-end: 0
}

.prose :where(tbody td, tfoot td):not(:where([class~=not-prose], [class~=not-prose] *)) {
    padding-top: .5714286em;
    padding-inline-end: .5714286em;
    padding-bottom: .5714286em;
    padding-inline-start: .5714286em
}

.prose :where(tbody td:first-child, tfoot td:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    padding-inline-start: 0
}

.prose :where(tbody td:last-child, tfoot td:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    padding-inline-end: 0
}

.prose :where(figure):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 2em;
    margin-bottom: 2em
}

.prose :where(.prose>:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 0
}

.prose :where(.prose>:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-bottom: 0
}

.visible {
    visibility: visible
}

.static {
    position: static
}

.absolute {
    position: absolute
}

.mx-2 {
    margin-left: .5rem;
    margin-right: .5rem
}

.mx-auto {
    margin-left: auto;
    margin-right: auto
}

.mb-1 {
    margin-bottom: .25rem
}

.mb-10 {
    margin-bottom: 2.5rem
}

.mb-12 {
    margin-bottom: 3rem
}

.mb-4 {
    margin-bottom: 1rem
}

.mb-6 {
    margin-bottom: 1.5rem
}

.mb-8 {
    margin-bottom: 2rem
}

.mt-12 {
    margin-top: 3rem
}

.mt-4 {
    margin-top: 1rem
}

.mt-6 {
    margin-top: 1.5rem
}

.mt-8 {
    margin-top: 2rem
}

.block {
    display: block
}

.inline {
    display: inline
}

.flex {
    display: flex
}

.table {
    display: table
}

.grid {
    display: grid
}

.contents {
    display: contents
}

.w-full {
    width: 100%
}

.max-w-3xl {
    max-width: 48rem
}

.max-w-5xl {
    max-width: 64rem
}

.shrink-0 {
    flex-shrink: 0
}

.transform {
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))
}

.flex-col {
    flex-direction: column
}

.flex-wrap {
    flex-wrap: wrap
}

.items-center {
    align-items: center
}

.justify-end {
    justify-content: flex-end
}

.justify-between {
    justify-content: space-between
}

.gap-2 {
    gap: .5rem
}

.gap-4 {
    gap: 1rem
}

.gap-5 {
    gap: 1.25rem
}

.rounded-full {
    border-radius: 9999px
}

.rounded-xl {
    border-radius: .75rem
}

.border {
    border-width: 1px
}

.border-gray-300 {
    --tw-border-opacity: 1;
    border-color: rgb(212 212 212 / var(--tw-border-opacity))
}

.bg-blue-700 {
    --tw-bg-opacity: 1;
    background-color: rgb(29 78 216 / var(--tw-bg-opacity))
}

.bg-white {
    --tw-bg-opacity: 1;
    background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.bg-gradient-to-r {
    background-image: linear-gradient(to right, var(--tw-gradient-stops))
}

.from-blue-500 {
    --tw-gradient-from: #3b82f6 var(--tw-gradient-from-position);
    --tw-gradient-to: rgb(59 130 246 / 0) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to)
}

.from-yellow-200 {
    --tw-gradient-from: #fef08a var(--tw-gradient-from-position);
    --tw-gradient-to: rgb(254 240 138 / 0) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to)
}

.to-blue-700 {
    --tw-gradient-to: #1d4ed8 var(--tw-gradient-to-position)
}

.to-yellow-100 {
    --tw-gradient-to: #fef9c3 var(--tw-gradient-to-position)
}

.fill-black {
    fill: #000
}

.p-4 {
    padding: 1rem
}

.px-2 {
    padding-left: .5rem;
    padding-right: .5rem
}

.px-4 {
    padding-left: 1rem;
    padding-right: 1rem
}

.px-5 {
    padding-left: 1.25rem;
    padding-right: 1.25rem
}

.py-1 {
    padding-top: .25rem;
    padding-bottom: .25rem
}

.py-16 {
    padding-top: 4rem;
    padding-bottom: 4rem
}

.py-2 {
    padding-top: .5rem;
    padding-bottom: .5rem
}

.py-3 {
    padding-top: .75rem;
    padding-bottom: .75rem
}

.py-8 {
    padding-top: 2rem;
    padding-bottom: 2rem
}

.pt-16 {
    padding-top: 4rem
}

.text-right {
    text-align: right
}

.text-2xl {
    font-size: 1.5rem;
    line-height: 2rem
}

.text-3xl {
    font-size: 1.875rem;
    line-height: 2.25rem
}

.text-sm {
    font-size: .875rem;
    line-height: 1.25rem
}

.text-xl {
    font-size: 1.25rem;
    line-height: 1.75rem
}

.font-medium {
    font-weight: 500
}

.font-semibold {
    font-weight: 600
}

.leading-none {
    line-height: 1
}

.leading-relaxed {
    line-height: 1.625
}

.leading-tight {
    line-height: 1.25
}

.tracking-tight {
    letter-spacing: -.025em
}

.text-\[\#72976C\] {
    --tw-text-opacity: 1;
    color: rgb(114 151 108 / var(--tw-text-opacity))
}

.text-\[\#C11574\] {
    --tw-text-opacity: 1;
    color: rgb(193 21 116 / var(--tw-text-opacity))
}

.text-\[\#CDA17A\] {
    --tw-text-opacity: 1;
    color: rgb(205 161 122 / var(--tw-text-opacity))
}

.text-\[\#EA3368\] {
    --tw-text-opacity: 1;
    color: rgb(234 51 104 / var(--tw-text-opacity))
}

.text-black {
    --tw-text-opacity: 1;
    color: rgb(0 0 0 / var(--tw-text-opacity))
}

.text-gray-400 {
    --tw-text-opacity: 1;
    color: rgb(163 163 163 / var(--tw-text-opacity))
}

.text-gray-500 {
    --tw-text-opacity: 1;
    color: rgb(115 115 115 / var(--tw-text-opacity))
}

.text-gray-600 {
    --tw-text-opacity: 1;
    color: rgb(82 82 82 / var(--tw-text-opacity))
}

.text-gray-700 {
    --tw-text-opacity: 1;
    color: rgb(64 64 64 / var(--tw-text-opacity))
}

.text-gray-900 {
    --tw-text-opacity: 1;
    color: rgb(23 23 23 / var(--tw-text-opacity))
}

.text-white {
    --tw-text-opacity: 1;
    color: rgb(255 255 255 / var(--tw-text-opacity))
}

.\!underline {
    text-decoration-line: underline !important
}

.\!no-underline {
    text-decoration-line: none !important
}

.underline-offset-2 {
    text-underline-offset: 2px
}

.opacity-40 {
    opacity: .4
}

.shadow-lg {
    --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / .1), 0 4px 6px -4px rgb(0 0 0 / .1);
    --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)
}

.shadow-blue-500\/50 {
    --tw-shadow-color: rgb(59 130 246 / .5);
    --tw-shadow: var(--tw-shadow-colored)
}

.outline {
    outline-style: solid
}

.filter {
    filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)
}

.transition-all {
    transition-property: all;
    transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    transition-duration: .15s
}

.transition-opacity {
    transition-property: opacity;
    transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    transition-duration: .15s
}

.duration-300 {
    transition-duration: .3s
}

@media (min-width: 768px) {
    .md\:prose-lg {
        font-size: 1.125rem;
        line-height: 1.7777778
    }

    .md\:prose-lg :where(p):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.3333333em;
        margin-bottom: 1.3333333em
    }

    .md\:prose-lg :where([class~=lead]):not(:where([class~=not-prose], [class~=not-prose] *)) {
        font-size: 1.2222222em;
        line-height: 1.4545455;
        margin-top: 1.0909091em;
        margin-bottom: 1.0909091em
    }

    .md\:prose-lg :where(blockquote):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.6666667em;
        margin-bottom: 1.6666667em;
        padding-inline-start: 1em
    }

    .md\:prose-lg :where(h1):not(:where([class~=not-prose], [class~=not-prose] *)) {
        font-size: 2.6666667em;
        margin-top: 0;
        margin-bottom: .8333333em;
        line-height: 1
    }

    .md\:prose-lg :where(h2):not(:where([class~=not-prose], [class~=not-prose] *)) {
        font-size: 1.6666667em;
        margin-top: 1.8666667em;
        margin-bottom: 1.0666667em;
        line-height: 1.3333333
    }

    .md\:prose-lg :where(h3):not(:where([class~=not-prose], [class~=not-prose] *)) {
        font-size: 1.3333333em;
        margin-top: 1.6666667em;
        margin-bottom: .6666667em;
        line-height: 1.5
    }

    .md\:prose-lg :where(h4):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.7777778em;
        margin-bottom: .4444444em;
        line-height: 1.5555556
    }

    .md\:prose-lg :where(img):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.7777778em;
        margin-bottom: 1.7777778em
    }

    .md\:prose-lg :where(picture):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.7777778em;
        margin-bottom: 1.7777778em
    }

    .md\:prose-lg :where(picture>img):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 0;
        margin-bottom: 0
    }

    .md\:prose-lg :where(video):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.7777778em;
        margin-bottom: 1.7777778em
    }

    .md\:prose-lg :where(kbd):not(:where([class~=not-prose], [class~=not-prose] *)) {
        font-size: .8888889em;
        border-radius: .3125rem;
        padding-top: .2222222em;
        padding-inline-end: .4444444em;
        padding-bottom: .2222222em;
        padding-inline-start: .4444444em
    }

    .md\:prose-lg :where(code):not(:where([class~=not-prose], [class~=not-prose] *)) {
        font-size: .8888889em
    }

    .md\:prose-lg :where(h2 code):not(:where([class~=not-prose], [class~=not-prose] *)) {
        font-size: .8666667em
    }

    .md\:prose-lg :where(h3 code):not(:where([class~=not-prose], [class~=not-prose] *)) {
        font-size: .875em
    }

    .md\:prose-lg :where(pre):not(:where([class~=not-prose], [class~=not-prose] *)) {
        font-size: .8888889em;
        line-height: 1.75;
        margin-top: 2em;
        margin-bottom: 2em;
        border-radius: .375rem;
        padding-top: 1em;
        padding-inline-end: 1.5em;
        padding-bottom: 1em;
        padding-inline-start: 1.5em
    }

    .md\:prose-lg :where(ol):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.3333333em;
        margin-bottom: 1.3333333em;
        padding-inline-start: 1.5555556em
    }

    .md\:prose-lg :where(ul):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.3333333em;
        margin-bottom: 1.3333333em;
        padding-inline-start: 1.5555556em
    }

    .md\:prose-lg :where(li):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: .6666667em;
        margin-bottom: .6666667em
    }

    .md\:prose-lg :where(ol>li):not(:where([class~=not-prose], [class~=not-prose] *)) {
        padding-inline-start: .4444444em
    }

    .md\:prose-lg :where(ul>li):not(:where([class~=not-prose], [class~=not-prose] *)) {
        padding-inline-start: .4444444em
    }

    .md\:prose-lg :where(.md\:prose-lg>ul>li p):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: .8888889em;
        margin-bottom: .8888889em
    }

    .md\:prose-lg :where(.md\:prose-lg>ul>li>*:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.3333333em
    }

    .md\:prose-lg :where(.md\:prose-lg>ul>li>*:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-bottom: 1.3333333em
    }

    .md\:prose-lg :where(.md\:prose-lg>ol>li>*:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.3333333em
    }

    .md\:prose-lg :where(.md\:prose-lg>ol>li>*:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-bottom: 1.3333333em
    }

    .md\:prose-lg :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: .8888889em;
        margin-bottom: .8888889em
    }

    .md\:prose-lg :where(dl):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.3333333em;
        margin-bottom: 1.3333333em
    }

    .md\:prose-lg :where(dt):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.3333333em
    }

    .md\:prose-lg :where(dd):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: .6666667em;
        padding-inline-start: 1.5555556em
    }

    .md\:prose-lg :where(hr):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 3.1111111em;
        margin-bottom: 3.1111111em
    }

    .md\:prose-lg :where(hr+*):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 0
    }

    .md\:prose-lg :where(h2+*):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 0
    }

    .md\:prose-lg :where(h3+*):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 0
    }

    .md\:prose-lg :where(h4+*):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 0
    }

    .md\:prose-lg :where(table):not(:where([class~=not-prose], [class~=not-prose] *)) {
        font-size: .8888889em;
        line-height: 1.5
    }

    .md\:prose-lg :where(thead th):not(:where([class~=not-prose], [class~=not-prose] *)) {
        padding-inline-end: .75em;
        padding-bottom: .75em;
        padding-inline-start: .75em
    }

    .md\:prose-lg :where(thead th:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        padding-inline-start: 0
    }

    .md\:prose-lg :where(thead th:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        padding-inline-end: 0
    }

    .md\:prose-lg :where(tbody td, tfoot td):not(:where([class~=not-prose], [class~=not-prose] *)) {
        padding-top: .75em;
        padding-inline-end: .75em;
        padding-bottom: .75em;
        padding-inline-start: .75em
    }

    .md\:prose-lg :where(tbody td:first-child, tfoot td:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        padding-inline-start: 0
    }

    .md\:prose-lg :where(tbody td:last-child, tfoot td:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        padding-inline-end: 0
    }

    .md\:prose-lg :where(figure):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.7777778em;
        margin-bottom: 1.7777778em
    }

    .md\:prose-lg :where(figure>*):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 0;
        margin-bottom: 0
    }

    .md\:prose-lg :where(figcaption):not(:where([class~=not-prose], [class~=not-prose] *)) {
        font-size: .8888889em;
        line-height: 1.5;
        margin-top: 1em
    }

    .md\:prose-lg :where(.md\:prose-lg>:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 0
    }

    .md\:prose-lg :where(.md\:prose-lg>:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-bottom: 0
    }
}

@media (prefers-color-scheme: dark) {
    .dark\:prose-invert {
        --tw-prose-body: var(--tw-prose-invert-body);
        --tw-prose-headings: var(--tw-prose-invert-headings);
        --tw-prose-lead: var(--tw-prose-invert-lead);
        --tw-prose-links: var(--tw-prose-invert-links);
        --tw-prose-bold: var(--tw-prose-invert-bold);
        --tw-prose-counters: var(--tw-prose-invert-counters);
        --tw-prose-bullets: var(--tw-prose-invert-bullets);
        --tw-prose-hr: var(--tw-prose-invert-hr);
        --tw-prose-quotes: var(--tw-prose-invert-quotes);
        --tw-prose-quote-borders: var(--tw-prose-invert-quote-borders);
        --tw-prose-captions: var(--tw-prose-invert-captions);
        --tw-prose-kbd: var(--tw-prose-invert-kbd);
        --tw-prose-kbd-shadows: var(--tw-prose-invert-kbd-shadows);
        --tw-prose-code: var(--tw-prose-invert-code);
        --tw-prose-pre-code: var(--tw-prose-invert-pre-code);
        --tw-prose-pre-bg: var(--tw-prose-invert-pre-bg);
        --tw-prose-th-borders: var(--tw-prose-invert-th-borders);
        --tw-prose-td-borders: var(--tw-prose-invert-td-borders)
    }
}


.prose-headings\:font-semibold :is(:where(h1, h2, h3, h4, h5, h6, th):not(:where([class~=not-prose], [class~=not-prose] *))) {
    font-weight: 600;
}



.highlight {
    position: relative;
    /* Make space for the button */
}

.highlight pre {
    padding-right: 1rem;
    /* Adjust padding to accommodate button */
}

.copy-code-btn {
    position: absolute;
    top: 0.5rem;
    /* Adjust positioning as needed */
    right: 0.5rem;
}




.go-to-top.active {
    opacity: 1;
    visibility: visible;
}




code,
kbd,
pre,
samp {
    font-family: "Geist Mono", ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace !important;
    font-size: 1em
}



.font-sans {
    font-family: "Geist", Inter, ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji" !important;
    font-feature-settings: "normal";
}



.link,
.article a {
    --tw-text-opacity: 1;
    color: rgb(94 234 212 / var(--tw-text-opacity));
    text-decoration-color: rgba(94, 234, 213, 0.36);
}

@media (prefers-color-scheme: dark) {

    .link,
    .article a {
        --tw-text-opacity: 1;
        color: rgb(94 234 212 / var(--tw-text-opacity))
    }
}

.link,
.article a {
    text-decoration-line: underline;
    text-decoration-thickness: 2px;
    text-underline-offset: .2ex;
    transition: color .3s, text-decoration-color .2s, text-underline-offset .2s
}

.link:hover,
.article a:hover {
    --tw-text-opacity: 1;
    color: rgb(94 234 212 / var(--tw-text-opacity));
    text-decoration-color: rgb(94 234 212)
}

@media (prefers-color-scheme: dark) {

    .link:hover,
    .article a:hover {
        --tw-text-opacity: 1;
        color: rgb(94 234 212 / var(--tw-text-opacity));
    }
}

.link:hover,
.article a:hover {
    text-underline-offset: .4em
}

code {
    text-wrap: wrap;
}

a[aria-label="Anchor"] {
    display: none;
}

#glow_box {
    background: var(--bg-gradient);
}